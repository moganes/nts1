apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "19"
    field.cattle.io/creatorId: user-b8b7b
    field.cattle.io/publicEndpoints: '[{"addresses":["22.239.129.22"],"port":80,"protocol":"HTTP","serviceName":"microservices-layer:ingress-dc10bbd6e88fe3f558704d328f5ec9d9","ingressName":"microservices-layer:notes-api-ingress","hostname":"api-prod.notes.charter.com","path":"/notes-api","allNodes":true},{"addresses":["22.239.129.22"],"port":30844,"protocol":"TCP","serviceName":"microservices-layer:notes-api-nodeport","allNodes":true}]'
  creationTimestamp: null
  generation: 1
  labels:
    cattle.io/creator: norman
    workload.user.cattle.io/workloadselector: deployment-microservices-layer-notes-api
  name: notes-api
  selfLink: /apis/apps/v1/namespaces/microservices-layer/deployments/notes-api
spec:
  progressDeadlineSeconds: 600
  replicas: 4
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: deployment-microservices-layer-notes-api
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cattle.io/timestamp: "2022-01-13T05:28:58Z"
        field.cattle.io/ports: '[[{"containerPort":8080,"dnsName":"notes-api-nodeport","hostPort":0,"kind":"NodePort","name":"8080tcp01","protocol":"TCP","sourcePort":0}]]'
      creationTimestamp: null
      labels:
        workload.user.cattle.io/workloadselector: deployment-microservices-layer-notes-api
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/hostname
                operator: NotIn
                values:
                - chrcnctrdn22-notes-p-app-l-22
      containers:
      - env:
        - name: LOGGING_CONFIG
          value: /config/logback.xml
        - name: SPRING_CONFIG_LOCATION
          value: /appConfig/application.yml
        image: 98.8.61.7:5000/notes-api:0.0.19
        imagePullPolicy: Always
        name: notes-api
        ports:
        - containerPort: 8080
          name: 8080tcp01
          protocol: TCP
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities: {}
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: false
        stdin: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        tty: true
        volumeMounts:
        - mountPath: /appConfig
          name: application-config
        - mountPath: /config
          name: logback-config
        - mountPath: /var/notes/api/notes
          name: log-dir
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 256
          name: notes-api-config
          optional: false
        name: application-config
      - configMap:
          defaultMode: 256
          name: note-api-logback
          optional: false
        name: logback-config
      - hostPath:
          path: /var/notes/api/notes
          type: DirectoryOrCreate
        name: log-dir
status: {}
